@model ML.Empleado
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Empleado</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <h2>Ingrese los datos de los empleado</h2>
        </div>
    </div>

    @using (Html.BeginForm("Form", "Empleado", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.IdEmpleado, new { @class = "visually-hidden-focusable" })
                @Html.TextBoxFor(model => model.IdEmpleado, new { @class = "form-control visually-hidden-focusable", @id = "txtIdEmpleado" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.NombreEmpleado)
                @Html.TextBoxFor(model => model.NombreEmpleado, new { @class = "form-control", placeholder = " Nombre Empleado", @onkeypress = "return ValidarSoloLetras(event,'lblNombreEmpleado')", @id = "txtNombreEmpleado" })
                @Html.ValidationMessageFor(model => model.NombreEmpleado, null, new { @class = "text-danger", @id = "lblNombreEmpleado" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.RFC)
                @Html.TextBoxFor(model => model.RFC, new { @class = "form-control", placeholder = " RFC", @id = "txtRFC" })
                @Html.ValidationMessageFor(model => model.RFC, null, new { @class = "text-danger", @id = "lblRFC" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Nombre)
                @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", placeholder = " Nombre", @onkeypress = "return ValidarSoloLetras(event,'lblNombre')", @id = "txtNombre" })
                @Html.ValidationMessageFor(model => model.Nombre, null,  new { @class = "text-danger", @id = "lblNombre" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ApellidoPaterno)
                @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", placeholder = " Apellido Paterno", @onkeypress = "return ValidarSoloLetras(event,'lblApellidoPaterno')", @id = "txtApellidoPaterno" })
                @Html.ValidationMessageFor(model => model.ApellidoPaterno, null, new { @class = "text-danger", @id = "lblApellidoPaterno" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.ApellidoMaterno)
                @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", placeholder = " Apellido Materno", @onkeypress = "return ValidarSoloLetras(event,'lblApellidoMaterno')", @id = "txtApellidoMaterno" })
                @Html.ValidationMessageFor(model => model.ApellidoMaterno, null, new { @class = "text-danger", @id = "lblApellidoMaterno" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Email)
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = " Email", @onkeypress = "return ValidarSoloCorreo(event)", @id = "txtEmail" })
                @Html.ValidationMessageFor(model => model.Email, null, new { @class = "text-danger", @id = "lblEmail" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Telefono)
                @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", placeholder = " Telefono", @id = "txtTelefono" })
                @Html.ValidationMessageFor(model => model.Telefono, null, new { @class = "text-danger", @id = "lblTelefono" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.FechaNacimiento)
                @Html.TextBoxFor(model => model.FechaNacimiento, new { @class = "form-control", placeholder = " Fecha nacimiento", @id = "txtFechaNacimiento" })
                @Html.ValidationMessageFor(model => model.FechaNacimiento, null, new { @class = "text-danger", @id = "lblFechaNacimiento" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.NSS)
                @Html.TextBoxFor(model => model.NSS, new { @class = "form-control", placeholder = " NSS", @id = "txtNSS" })
                @Html.ValidationMessageFor(model => model.NSS, null, new { @class = "text-danger", @id = "lblNSS" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.FechaIngreso)
                @Html.TextBoxFor(model => model.FechaIngreso, new { @class = "form-control", placeholder = " Fecha ingreso", @id = "txtFechaIngreso" })
                @Html.ValidationMessageFor(model => model.FechaIngreso, null, new { @class = "text-danger", @id = "lblFechaIngreso" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @Html.LabelFor(model => model.Empresa.IdEmpresa)
                @Html.DropDownListFor(model => model.Empresa.IdEmpresa, new SelectList(Model.Empresa.Empresas, "IdEmpresa", "Nombre"), "Seleccione una opción", new { @class = "form-control", @id = "txtIdEmpresa" })

                @Html.ValidationMessageFor(model => model.Empresa.IdEmpresa)
            </div>
        </div>

        //imagen
        <div class="row">
            <div class="col-md-12">
                @*@Html.LabelFor(model => model.Imagen)*@
                @Html.HiddenFor(model => model.Foto)
                <br />
                <input type="file" id="fuimgEmpleado" name="fuimgEmpleado" onchange="PreviewFoto(event)" />
                <br />
                @if (Model.Foto == null)
                {
                    <img id="imgEmpleado" src="~/Images/usuario.jpg" style="width:250px; height:200px;" />
                }
                else
                {
                    <img id="imgEmpleado" src="data:image/jpg;base64,@Convert.ToBase64String(Model.Foto)" style="width:250px; height:200px;" />
                }
            </div>
        </div>


        <br />
        <div class="row">
            <div class="col-md-1">
                <button type="submit" class="btn btn-success"> Guardar</button>
            </div>
            <div class="col-md-1">
                @Html.ActionLink("Cancelar", "GetAll", "Empleado", new { @class = "btn btn-danger" })
            </div>
        </div>
    }
</div>

@*IMAGEN*@
<script type="text/javascript">
    function PreviewFoto(event) {
        var output = document.getElementById("imgEmpleado");
        output.src = URL.createObjectURL(event.target.files[0]);
        output.onload = function () {
            URL.revokeObjectURL(output.src);
        }
    };
</script>

<script type="text/javascript">
    /*Solo letras*/
    function ValidarSoloLetras(event, controlId) {

        var letra = event.key;
        var regexLetters = /^[A-Za-z\s]+$/;

        if (regexLetters.test(letra)) {
            $('#' + controlId).text("Valido");
            $('#' + controlId).css({ "color": "green" });
            return true;
        }
        else {
            $('#' + controlId).text(letra + " Solo acepta caracteres");
            $('#' + controlId).css({ "color": "red" });
            return false;
        }

    }

</script>

<script type="text/javascript">
   
    /*Solo correo*/
    function ValidarSoloCorreo(event) {

        var correo = event.key;
        var regexCorreo = /^[a-zA-Z0-9\._-]@@[a-zA-Z0-9-]{2,}[.][a-zA-Z]{2,4}+$/;

        if (regexCorreo.test(correo)) {
            return true;
        }
        else {
            return false;
        }
    }

</script>
